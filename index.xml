<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Onecampus T.D.</title>
    <link>http://onecampus.github.io/</link>
    <description>Recent content on Onecampus T.D.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 28 Oct 2015 15:34:00 +0800</lastBuildDate>
    <atom:link href="http://onecampus.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>栅格化设计 by mj</title>
      <link>http://onecampus.github.io/%E6%A0%85%E6%A0%BC%E5%8C%96%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Wed, 28 Oct 2015 15:34:00 +0800</pubDate>
      
      <guid>http://onecampus.github.io/%E6%A0%85%E6%A0%BC%E5%8C%96%E8%AE%BE%E8%AE%A1/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;栅格化设计-01.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-02.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-03.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-04.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-05.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-06.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-07.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-08.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-09.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-10.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-11.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-12.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-13.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-14.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-15.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-16.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-17.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-18.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-19.jpg&#34; alt=&#34;&#34; /&gt;
&lt;br /&gt;
&lt;img src=&#34;栅格化设计-20.jpg&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>网页弹性按钮(纯css3) by zhou</title>
      <link>http://onecampus.github.io/%E7%BD%91%E9%A1%B5%E5%BC%B9%E6%80%A7%E6%8C%89%E9%92%AE/</link>
      <pubDate>Sun, 25 Oct 2015 15:55:29 +0800</pubDate>
      
      <guid>http://onecampus.github.io/%E7%BD%91%E9%A1%B5%E5%BC%B9%E6%80%A7%E6%8C%89%E9%92%AE/</guid>
      <description>

&lt;h2 id=&#34;网页中弹性按钮设计-纯css:e2661edcf3ad09a929f3c6c9ad328c35&#34;&gt;网页中弹性按钮设计(纯CSS)&lt;/h2&gt;

&lt;p&gt;效果如下：
&lt;img src=&#34;../btn.gif&#34; alt=&#34;image&#34; /&gt;
&lt;/p&gt;

&lt;h4 id=&#34;思路:e2661edcf3ad09a929f3c6c9ad328c35&#34;&gt;思路&lt;/h4&gt;

&lt;p&gt;其中包含2个动效，第一个是按钮中心的颜色扩散，第二个是按钮弹性收缩。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;第一个颜色扩散：按钮分为了两层，第一层是按钮本身，第二层是按钮的为元素:before，&lt;strong&gt;注意按钮before是这个效果的重点，通过hover动作触发按钮before层的扩散&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;第二个弹性收缩：需要使用@keyframes设计动画的效果。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;两个动画独立完成后，重叠在一起的话，需要调整动画的时间及效果。&lt;/p&gt;

&lt;h4 id=&#34;代码分析:e2661edcf3ad09a929f3c6c9ad328c35&#34;&gt;代码分析&lt;/h4&gt;

&lt;p&gt;html&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div class=&amp;quot;bottle&amp;quot;&amp;gt;
  &amp;lt;a class=&amp;quot;hvr-rectangle-out hvr-pop&amp;quot; href=&amp;quot;javascript:void(0)&amp;quot;&amp;gt;1&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
  &amp;lt;div class=&amp;quot;bottle&amp;quot;&amp;gt;
  &amp;lt;a class=&amp;quot;hvr-rectangle-out hvr-pop&amp;quot; href=&amp;quot;javascript:void(0)&amp;quot;&amp;gt;2&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
  &amp;lt;div class=&amp;quot;bottle&amp;quot;&amp;gt;
  &amp;lt;a class=&amp;quot;hvr-rectangle-out hvr-pop&amp;quot; href=&amp;quot;javascript:void(0)&amp;quot;&amp;gt;3&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
  &amp;lt;div class=&amp;quot;bottle&amp;quot;&amp;gt;
  &amp;lt;a class=&amp;quot;hvr-rectangle-out hvr-pop&amp;quot; href=&amp;quot;javascript:void(0)&amp;quot;&amp;gt;4&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
  &amp;lt;div class=&amp;quot;bottle&amp;quot;&amp;gt;
  &amp;lt;a class=&amp;quot;hvr-rectangle-out hvr-pop&amp;quot; href=&amp;quot;javascript:void(0)&amp;quot;&amp;gt;5&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;css&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;/*按钮基础样式*/
.bottle {
  display: block;
  width: 50px;
  height: 50px;
  margin-bottom: 5px;
}
.bottle a {
  text-decoration: none;
  color: gray;
}
/*颜色扩散动效部分*/
.hvr-rectangle-out {
  display: inline-block;
  vertical-align: middle;
  transform: translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  backface-visibility: hidden;
  position: relative;
  background-color: #fafafa;
  transition-property: color;
  transition-duration: 0.3s;
}
/*:before这个是颜色扩散动效的重点*/
.hvr-rectangle-out:before {
  content: &amp;quot;&amp;quot;;
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  transform: scale(0.5);
  transition-property: transform;
  transition-duration: 0.2s;
  transition-timing-function: ease-out;
}
.hvr-rectangle-out:hover,
.hvr-rectangle-out:focus,
.hvr-rectangle-out:active {
  color: white; /*颜色扩散时候，字体改变颜色*/
}
.hvr-rectangle-out:hover:before,
.hvr-rectangle-out:focus:before,
.hvr-rectangle-out:active:before {
  background: #2098d1;
  transform: scale(1); /*hover触发:before层的扩散*/
}

/*弹性收缩动效部分*/
/*使用keyframes定义弹性动画
  1是原来的比例扩散到1.05倍的比例，再缩回1倍原来的比例*/
@keyframes hvr-pop {
  25% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  50% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  75% {
    -webkit-transform: scale(1.05);
    transform: scale(1.05);
  }
  100% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}
.hvr-pop {
  display: inline-block;
  vertical-align: middle;
  transform: translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  backface-visibility: hidden;
  width: 50px;
  height: 50px;
  text-align: center;
  line-height: 50px;
}
.hvr-pop:hover, .hvr-pop:focus, .hvr-pop:active {
  animation-name: hvr-pop;
  animation-duration: 0.3s;
  animation-timing-function: linear;
  animation-iteration-count: 1;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Centos下搭建DNS服务器 by yunjiang</title>
      <link>http://onecampus.github.io/%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1%E5%99%A8%20by%20yunjiang/</link>
      <pubDate>Tue, 29 Sep 2015 15:34:00 +0800</pubDate>
      
      <guid>http://onecampus.github.io/%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1%E5%99%A8%20by%20yunjiang/</guid>
      <description>

&lt;h3 id=&#34;1-yum-y-install-bind-安装bind:2966bf4a81aa2769fb12d1b7246579a7&#34;&gt;1.yum -y install bind 安装bind&lt;/h3&gt;

&lt;h3 id=&#34;2-vim-etc-named-conf-修改named-conf文件的options如下:2966bf4a81aa2769fb12d1b7246579a7&#34;&gt;2.vim /etc/named.conf 修改named.conf文件的options如下:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;options {
        listen-on port 53 { any; };
        //listen-on-v6 port 53 { ::1; };
        directory       &amp;quot;/var/named&amp;quot;;
        dump-file       &amp;quot;/var/named/data/cache_dump.db&amp;quot;;
        statistics-file &amp;quot;/var/named/data/named_stats.txt&amp;quot;;
        memstatistics-file &amp;quot;/var/named/data/named_mem_stats.txt&amp;quot;;
        allow-query     { any; };
        recursion yes;

        dnssec-enable yes;
        dnssec-validation yes;
        dnssec-lookaside auto;

        /* Path to ISC DLV key */
        bindkeys-file &amp;quot;/etc/named.iscdlv.key&amp;quot;;

        managed-keys-directory &amp;quot;/var/named/dynamic&amp;quot;;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-vim-etc-named-rfc1912-zones-在named-rfc1912-zones最下面添加:2966bf4a81aa2769fb12d1b7246579a7&#34;&gt;3.vim /etc/named.rfc1912.zones，在named.rfc1912.zones最下面添加&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;zone &amp;quot;ags.com&amp;quot; IN {
        type master;
        file &amp;quot;named.ags.com&amp;quot;;
        allow-update {none;};
};
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-vim-var-named-named-ags-com-添加named-ags-com文件-文件内容如下:2966bf4a81aa2769fb12d1b7246579a7&#34;&gt;4.vim /var/named/named.ags.com 添加named.ags.com文件，文件内容如下：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$TTL 1D
@     IN SOA ags.com rname.invalid. (
                         0    ;  serial 
                        1D    ;  refresh
                        1H    ;  retry
                        1W    ;  expire
                        3H )   ;  minimum
      NS   @
      A    127.0.0.1
      AAAA ::1
CYYDMKE   IN A 192.168.1.10  //这里的ip要改为本机ip
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;如此设置之后-访问的域名就会固定为-cyydmke-ags-com:2966bf4a81aa2769fb12d1b7246579a7&#34;&gt;如此设置之后，访问的域名就会固定为 CYYDMKE.ags.com&lt;/h5&gt;

&lt;h3 id=&#34;5-配置路由器dns地址-找到dhcp服务器-修改首选dns服务器:2966bf4a81aa2769fb12d1b7246579a7&#34;&gt;5.配置路由器DNS地址（找到DHCP服务器，修改首选DNS服务器）&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>ngrok 简单服务器搭建 by june</title>
      <link>http://onecampus.github.io/ngrok%20%E7%AE%80%E5%8D%95%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%20by%20june/</link>
      <pubDate>Sun, 20 Sep 2015 10:14:34 +0800</pubDate>
      
      <guid>http://onecampus.github.io/ngrok%20%E7%AE%80%E5%8D%95%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%20by%20june/</guid>
      <description>

&lt;h2 id=&#34;ngrok介绍:4f3ca5663e6fe63f7d854ee2feb8a06c&#34;&gt;ngrok介绍&lt;/h2&gt;

&lt;p&gt;ngrok 是一个反向代理，通过在公共的端点和本地运行的 Web 服务器之间建立一个安全的通道。ngrok 可捕获和分析所有通道上的流量，便于后期分析和重放(来自百度百科)。通过ngrok,我们可以在外网轻松访问本机的资源(其中一个非常重要的功能)。在微信公众号等的开发中，ngrok将大大节省开发者的调试，测试时间和成本,可谓神器!&lt;/p&gt;

&lt;h2 id=&#34;mac-搭建ngrok服务器:4f3ca5663e6fe63f7d854ee2feb8a06c&#34;&gt;Mac 搭建ngrok服务器&lt;/h2&gt;

&lt;p&gt;1.下载ngrok,地址：&lt;a href=&#34;https://ngrok.com/download。&#34;&gt;https://ngrok.com/download。&lt;/a&gt; 请注意:下载官方1.x客户端，官方目前并不准备开放2.0客户端的第三方服务器支持。安装了brew的用户可直接 brew install ngrok,中途会提示安装go,选择是就行了，简单粗暴.&lt;/p&gt;

&lt;p&gt;2.去官网注册一个账号并获取密钥，地址：&lt;a href=&#34;https://ngrok.com/&#34;&gt;https://ngrok.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.运行$ ngrok -authtoken YOUR_TOKEN_HERE 80（这是一个默认的配置，默认访问：&lt;a href=&#34;http://127.0.0.1）ngrok&#34;&gt;http://127.0.0.1）ngrok&lt;/a&gt; -authtoken只需要运行一次，以后都不需要再次运行, 端口可以随便改&lt;/p&gt;

&lt;p&gt;4.配置一级域名：$ ngrok -subdomain = june(任何你喜欢的英文) 80&lt;/p&gt;

&lt;p&gt;5.由于ngrok默认是部署在国外的服务器，很多时候都不能访问或者访问很慢，因此，我们可以使用部署在国内的服务器， 详情请访问:&lt;a href=&#34;http://www.tunnel.mobi/&#34;&gt;http://www.tunnel.mobi/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;更多信息:4f3ca5663e6fe63f7d854ee2feb8a06c&#34;&gt;更多信息&lt;/h2&gt;

&lt;p&gt;访问 &lt;a href=&#34;http://www.tunnel.mobi/&#34;&gt;http://www.tunnel.mobi/&lt;/a&gt;, &lt;a href=&#34;https://ngrok.com/docs&#34;&gt;https://ngrok.com/docs&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;补充-由于-官方已经停止发布ngrok1-x版本-官网只能获取2-x-而并不能获取1-x的token-解决方法-待续:4f3ca5663e6fe63f7d854ee2feb8a06c&#34;&gt;补充： 由于 官方已经停止发布ngrok1.x版本，官网只能获取2.x,而并不能获取1.x的token&amp;hellip;=.=, 解决方法，待续。。。&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>Android右滑关闭当前页面实现 by fostion</title>
      <link>http://onecampus.github.io/Android%E5%8F%B3%E6%BB%91%E5%85%B3%E9%97%AD%E5%BD%93%E5%89%8D%E9%A1%B5%E9%9D%A2%E5%AE%9E%E7%8E%B0%20by%20fostion/</link>
      <pubDate>Fri, 11 Sep 2015 16:00:16 +0800</pubDate>
      
      <guid>http://onecampus.github.io/Android%E5%8F%B3%E6%BB%91%E5%85%B3%E9%97%AD%E5%BD%93%E5%89%8D%E9%A1%B5%E9%9D%A2%E5%AE%9E%E7%8E%B0%20by%20fostion/</guid>
      <description>

&lt;h2 id=&#34;viewdraghelper介绍:12e2a8ca259c2875a3b1a12e6233ec76&#34;&gt;ViewDragHelper介绍&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ViewDragHelper 是官方提供我们简单处理ViewGroup内部拖动某个子view处理，同时还可以多手指处理、加速度检测
等,用于代替onInterceptTouchEvent和onTouchEvent处理一些复杂的问题.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;viewdraghelper使用:12e2a8ca259c2875a3b1a12e6233ec76&#34;&gt;ViewDragHelper使用&lt;/h2&gt;

&lt;h4 id=&#34;拦截触碰事件:12e2a8ca259c2875a3b1a12e6233ec76&#34;&gt;拦截触碰事件：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    @Override
    public boolean onInterceptTouchEvent(MotionEvent ev) {
        return mViewDragHelper != null ? mViewDragHelper.shouldInterceptTouchEvent(ev) 
                                                          : super.onInterceptTouchEvent(ev);
    }

    @Override
    public boolean onTouchEvent(MotionEvent event) {
        if (mViewDragHelper != null) {
            mViewDragHelper.processTouchEvent(event);
        }
        return true;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;这里我们拦截所有事件，其实可以根据实际需要拦截相应的事件。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;事件处理:12e2a8ca259c2875a3b1a12e6233ec76&#34;&gt;事件处理&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    @Override
      public boolean tryCaptureView(View child, int pointerId) {
       return child == mContentView;//只有第一个子view才可以移动
     }
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;截取事件后我们可根据需要判断是否处理，返回true就是处理view&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;
    @Override
    protected void onLayout(boolean changed, int l, int t, int r, int b) {
        super.onLayout(changed, l, t, r, b);
        //获取需要拖动的宽度
        mContentWidth = mContentView.getWidth();
    }

    @Override
    protected void onFinishInflate() {
        super.onFinishInflate();
        if (getChildCount() != 1) {
            throw new IllegalStateException(&amp;quot;SwipeBackLayout only have one child view&amp;quot;);
        }
        mContentView = getChildAt(0);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;获得滑动的view,同时确保必须要只包含一个子view，去报拖动整个view&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;    /**
     * 记录向左移动的值
     */
    @Override
    public void onViewPositionChanged(View changedView, int left, int top, int dx, int dy) {
    mMoveLeft = left;
    if (isClose &amp;amp;&amp;amp; (left == mContentWidth)) {
    if (mDragCallBack != null) {
        mDragCallBack.onDrag();
            }
          }
        }
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;如果当前状态是关闭状态且左边的值等于滑动的View的宽度，也就是说当前的界面已经滑出屏幕后，通知activity可以finish了&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;    /**
     * 手指释放view触发效果：
     * 若是距离不够就弹回去
     */
    @Override
      public void onViewReleased(View releasedChild, float xvel, float yvel) {
      //借助computeScroll方法 移动距离大于四分之一将会关闭否则弹回
      if (mMoveLeft &amp;gt;= (mContentWidth / 4)) {
          //划出屏幕
          isClose = true;
          mViewDragHelper.settleCapturedViewAt(mContentWidth, releasedChild.getTop());
       } else {
           //返回原来位置
            isClose = false;
            mViewDragHelper.settleCapturedViewAt(0, releasedChild.getTop());
            }
            invalidate();
       }

      @Override
      public int clampViewPositionHorizontal(View child, int left, int dx) {
         return Math.min(mContentWidth, Math.max(left, 0));
      }

      @Override
         public int getViewHorizontalDragRange(View child) {
         return mContentWidth;
      }
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;设置滑动的区域和手指离开屏幕后的处理&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;    @Override
    public void computeScroll() {
        super.computeScroll();
        if (mViewDragHelper != null &amp;amp;&amp;amp; mViewDragHelper.continueSettling(true)) {
            invalidate();
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;计算根据抬手后的位置滑动到需要滑动的位置，并刷新&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;    backLayout.setDragCallBack(new SwipeBackLayout.DragCallBack() {
            @Override
            public void onDrag() {
                finish();
            }
     });
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;处理回调，结束当前页面&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;最后Activity主题添加
&lt;code&gt;
&amp;lt;item name=&amp;quot;android:windowIsTranslucent&amp;quot;&amp;gt;true&amp;lt;/item&amp;gt;
&amp;lt;item name=&amp;quot;android:windowBackground&amp;quot;&amp;gt;@android:color/transparent&amp;lt;/item&amp;gt;
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;显示就没有白色背景了&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;效果图&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;../fostion_result1.jpg&#34; alt=&#34;xiaoguotupian&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>hugo 基础教程 by nekocode</title>
      <link>http://onecampus.github.io/hugo%20%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%20by%20nekocode/</link>
      <pubDate>Thu, 10 Sep 2015 10:14:34 +0800</pubDate>
      
      <guid>http://onecampus.github.io/hugo%20%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%20by%20nekocode/</guid>
      <description>

&lt;h2 id=&#34;hugo-download:3e7ca7ba07a85115bf01c033d09ed7f6&#34;&gt;Hugo Download&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;https://github.com/spf13/hugo/releases&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;hugo-初尝:3e7ca7ba07a85115bf01c033d09ed7f6&#34;&gt;Hugo 初尝&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;hugo new site hugo_blog
cd hugo_blog

hugo new first.md
hugo undraft content/first.md

mkdir themes
cd themes
git clone https://github.com/spf13/hyde.git
cd hyde
rm -rf .git

cd ..
cd ..
hugo server -t hyde --watch
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;website-configuration:3e7ca7ba07a85115bf01c033d09ed7f6&#34;&gt;Website Configuration&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;toml&lt;/code&gt; or &lt;code&gt;yaml&lt;/code&gt; or &lt;code&gt;json&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;baseurl = &amp;quot;http://onecampus.github.io/&amp;quot;
languageCode = &amp;quot;zh-CN&amp;quot;
title = &amp;quot;Onecampus T.D.&amp;quot;
theme = &amp;quot;hyde&amp;quot;

[params]
	description = &amp;quot;I am the bone of my sword.&amp;quot;
	#disqusShortname = &amp;quot;spf13&amp;quot;

[[menu.main]]
	Name = &amp;quot;organization&amp;quot;
	Url = &amp;quot;https://github.com/onecampus&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;more about &lt;strong&gt;&lt;code&gt;toml&lt;/code&gt;&lt;/strong&gt;：&lt;a href=&#34;http://segmentfault.com/a/1190000000477752&#34;&gt;http://segmentfault.com/a/1190000000477752&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;more about &lt;strong&gt;&lt;code&gt;configuration&lt;/code&gt;&lt;/strong&gt;：&lt;a href=&#34;http://gohugo.io/overview/configuration/&#34;&gt;http://gohugo.io/overview/configuration/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;用-hugo-编写团队博客:3e7ca7ba07a85115bf01c033d09ed7f6&#34;&gt;用 Hugo 编写团队博客&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;fork&lt;/strong&gt; &lt;a href=&#34;https://github.com/onecampus/onecampus_blog&#34;&gt;https://github.com/onecampus/onecampus_blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;write articles&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pull requests&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;other:3e7ca7ba07a85115bf01c033d09ed7f6&#34;&gt;Other&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;themes&lt;/strong&gt;：&lt;a href=&#34;https://github.com/spf13/hugoThemes&#34;&gt;https://github.com/spf13/hugoThemes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;syntax higlighting&lt;/strong&gt;：&lt;a href=&#34;http://gohugo.io/extras/highlighting&#34;&gt;http://gohugo.io/extras/highlighting&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;默认的 Server-Side 着色有问题，建议改为 Client-Side Syntax Highlighting，使用 &lt;strong&gt;&lt;a href=&#34;https://highlightjs.org/&#34;&gt;highlight.js&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>